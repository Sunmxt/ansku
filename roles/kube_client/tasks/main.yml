#
#   Deploy kubernetes client.
#
---
- include_tasks: roles/common/tasks/deploy_bin.yml
  vars:
    src: "{{ __local_kube_client_binary_root }}/kubectl"
    dest: "/usr/bin/kubectl"

- name: Deploy Certificates.
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - src: "{{ __local_kube_ca }}"
    dest: "{{ __kube_ca }}"
  #- src: "{{ __local_kube_tls }}"
  #  dest: "{{ __kube_tls }}"
  - src: "{{ __local_kubectl_client }}"
    dest: "{{ __kubectl_client }}"


- name: Deploy Keys.
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0600
  with_items:
  - src: "{{ __local_kubectl_client_key }}"
    dest: "{{ __kubectl_client_key }}"

- name: Load kubeconfig credentials.
  import_tasks: roles/kube_config/tasks/load_kubeconfig_vars.yml
  connection: local
  delegate_to: localhost
  run_once: true

- name: Configure kubectl
  shell: |
    "/usr/bin/kubectl" config set-cluster "{{ __kube_cluster_name }}" --certificate-authority="{{ __kube_ca }}" --embed-certs --server="{{ __apiserver_ha_endpoint }}";
    "/usr/bin/kubectl" config set-credentials "{{ __kubectl_username }}" --client-certificate="{{ __kubectl_client }}" --client-key="{{ __kubectl_client_key }}" --embed-certs=true --token={{ __kubectl_user_token }};
    "/usr/bin/kubectl" config set-context main-cluster-context --cluster="{{ __kube_cluster_name }}" --user="{{ __kubectl_username }}";
    "/usr/bin/kubectl" config use-context main-cluster-context
